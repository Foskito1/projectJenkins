# Bundle keys used on the package com.soluzionasf.ocen.util.genbundle
# Collects all possible locale resource associated with the classes of this
# package.
# We use a class name as prefix to distinguish equal property, for example:
# genBundle.help and genTreeBundle.help.
#
# Trick: We use the \ (invert bar and space) at the beginning of the line
# to get the indenting effect.
# author:        David Leal
# Creation date: 22/12/2002
#
# Version History: [Rev d.d dd Mmm yyyy hh:mm:ss  \n ]
# $Log: not supported by cvs2svn $
 *  *    Rev 1.1   27 Mar 2003 16:12:46   UF367151 * The help information was splitted into info and use, in order * to add the version information.#  *    Rev 1.0   25 Mar 2003 20:09:54   UF367151 * Initial revision.
# Grouped by topic, then by alphabetic order

# English (deafault) locale

begin                       = Begin[{0}]
bundle                      = bundle
bundleRedefinesKeys         = The bundle \"{0}\" redefines the keys: {1}.
bundlesDontHaveSameParentInfo = The bundles {0} done have the same parent \
                            information:
bundleWithWrongParent       = The bundle \"{0}\" has as parent \"{1}\", \
                                instead of \"{2}\".
checkBundles                 = checkBundles
checking                    = {0}...
checkingSyntaxFor           = Checking Syntax for {0} ...
checkSameParent             = checkSameParent
checkSameParentName         = Checking Same Parent Bundle
checkSyntax                 = checkSyntax
checkSyntaxName             = Checking Syntax
checkRedefinedParentKeys    = checkAreParentKeysRedefined
checkRedefinedParentKeysName = Checking Redefined Parent bundle Keys
cmdLineParser.unknownOption=ERROR[CmdLineParser]: Unknown the option: '{0}'.
cmdLineParser.illegalOptionValue=ERROR[CmdLineParser]: The value \"{0}\" is not valid for the option ''{1}''.

differentBundles            = The bundle \"{0}\" is different from \"{1}\"
differentSize               = The bundles \"{0}\", \"{1}\" have different number of resources: {2} and {3} respectivally.
differentValues             = On bundle \"{0}\" and \"{1}\" the keys {2}: \
                                have different values: {3} != {4}.
defaultLocale               = default locale

end                         = END[{0}]
errorMsge                   = ERROR[{0}]: {1}

failedWithNumber            = failed[{0}]
failMsge                    = FAIL[{0}]: {1}

genBundle                   = genBundle
genTreeBundle               = genTreeBundle
generatingTheFile           = Generating the file \"{0}\" ...
inputData                   = ====================================================\n\
                              Input Data\n\
                              ====================================================\n\
                              inputFile            = {0}\n\
                              package              = {1}\n\
                              bundles              = {2}\n\
                              locales              = {3}\n\
                              parents and children = {4}\n\
                              ====================================================\n\n
misssingMandatoryArgument   = The command line input argument \"--{0}\" \
                                option is mandatory. You have to provide \
                                a value (not null nor empty)
noOptions                   = There are no options, some of them are mandatory.
notExecuted                 = Not Executed

onBundleKeysDontExist=On bundle \"{1}\" the {0,choice,1#key|1<keys}: {2} {0,choice,1#does|1<do} not exist.
ok                          = ok
onBundleKeysDontStartWithUpperCaseLetter=On bundle \"{1}\" the {0,choice,1#key|1<keys}: {2} {0, choice,1#does|1<do} not start with an upper case letter.

printBundlesHeader          = \n\
                                *****************************\
                                *****************************\
                                *********************\n\
                                Printing bundle list sorted by bundles \
                                and for\n\ each locale\n\
                                *****************************\
                                *****************************\
                                *********************\n
printBundlesForAllLocalesHeader = \n\
                                *****************************\
                                *****************************\
                                *********************\n\
                                Printing the bundle base list for each \
                                posible representation\n\ per bundle key\n\
                                *****************************\
                                *****************************\
                                *********************\n
provideAtLeastOnLocale      = You should provide at least one locale (default one).
reportSummary                = \n===============================================\n\
                               Summary Results:\n\
                               ===============================================\n\
                               Check Syntax                       {0}\n\
                               Check Same Parent Bundle           {1}\n\
                               Check Redefined Parent Bundle Keys {2}\n\
                               {3,choice,0#|0<Total Fails                        {3}\n}\
                               ===============================================

warningMsge                 = WARNING[{0}]: {1}

###############################################
# Helper messages and bundle with long value: #
###############################################

# Version info to be used for printing the help information
versionInfo =\
    Version: {0}\n\
    Author: David Leal Valmaña

# Pattern used for printing the help, it prints the header info, then
# version info and finally the usage info.
help = {0}\n{1}\n\n{2}

# Information of the GenTreeBundle class
genTreeBundle.info =\
    GenTreeBundle: Program for generating a list of bundle families, it invokes\n\
   \    for each family the method:\n\
   \    com.soluzionasf.ocen.util.genbundle.GenBundle.main(String[])\n\
    Copyright (c) 2003 Unión Fenosa - Soluziona - S.A. All Rights Reserved.

# Usage of the GenTreeBundle class
genTreeBundle.use =\
    usage:\n\
   \    java GentTreeBundle [{-h,--help}] propertyFile\n\
    where:\n\
    {-h,--help}  Prints the help (this message). If this options is present\n\
   \             as first argument, then the help is printed and nothing\n\
                 else is done.\n\
    propertyFile Property file that contents the input line argument\n\
   \             options used for generating each bundle family. In this file\n\
   \             should be defined the property 'numberOfFamilies' that is the\n\
   \             number of families to generates. Then the properties\n\
   \             'family_0', 'family_1', ..., 'family_n-1', where n is the value\n\
   \             stored on the property 'numberOfFamilies'.\n\
    NOTES:\n\
    - Brackets denotes optional input arguments.\n\
    - {-o,--option} denotes you can use the short form option '-o' or the long form\n\
   \  '--option'.

# Information of the GenBundle class
genBundle.help =\
    GenBundle: Program for generating resource bundles from template classes\n\
   \    defined on the package com.soluziona.ocen.util.genbundle.\n\
    Copyright (c) 2003 Unión Fenosa - Soluziona - S.A. All Rights Reserved.

# Usage of the GenBundle class
genBundle.use =\
    usage:\n\
   \    java com.soluzionasf.ocen.util.genBundle.GenBundle\n\
   \        [{-o,--optionalArgs}] {-i,--inputDir} <inputDir>\n\
   \        {-c,--class} <className> {-n--info} <concept> <locales>\n\n\
    where\n\
    <inputDir>  The input path where are localised the templates files.\n\
    <className> Basic name of the bundle classes (without suffix).\n\
    <concept>   Short description associated with the bundles to be generated.\n\
   \            For including spaces, you have to double quote them.\n\
   \            This information will be included on javadoc block comment of\n\
   \            the generated class.\n\
    <locales>   The locales, i.e. an array of locales suffixes,\n\
   \            separated by blanks, for example: es  en. The first one\n\
   \            corresponds to the default locale. You have to provide the\n\
   \            at least the default locale one.\n\n\
    The optional arguments (that is: [{-o,--optionalArgs}]) could be:\n\
    {-h,--help}       If this options is present, print this message, the other\n\
   \                  arguments are not considered.\n\
    {-o,--output} <outputDir>\n\
   \                  The output path where to put the generated classes. If this\n\
   \                  option is not present, we use the <inputDir>.\n\
    {-p,--package} <packageName>\n\
   \                  The package of the generated classes. If this option is not\n\
   \                  present we use package of template classes.\n\
    {-e,--extends} <parentClass>\n\
   \                  The parent class of className, i.e. className extends it.\n\
   \                  If this option is not present, we use the parent of the base\n\
   \                  template class.\n\
    {-b,--parentBundle} <parentBundle>\n\
   \                  The parent bundle, i.e. the bundle that it looks if some key\n\
   \                  was not found in the current bundle. If this option is not\n\
   \                  present, we use the null value. Nevertheless if the class\n\
   \                  has ancestors (extends non abstract class), then it reassign\n\
   \                  this value with an instance of the ancestor class. If you\n\
   \                  really want the null value, the you could enter as input\n\
   \                  argument the value NULL, then the null parent value will\n\
   \                  remain.\n\
    {-k,--key} <familyKey>\n\
   \                  Key used for specifying to the loader (input argument) for the\n\
   \                  generated classes, there is one key per bundle family.\n\
   \                  If this option is not present we assume the family name is:\n\
   \                  \"familyKey\".\n\
    {-l,--loader} <loaderClass>\n\
   \                  The class used for loading the specific Device implementation.\n\
   \                  If this option is not present we use\n\
   \                  \"com.soluzionasf.ocen.util.bundle.DeviceFactory\" class.\n\n\
    NOTES:\n\
    - Brackets denotes optional input arguments.\n\
    - {-o,--option}  means you can use the input argument option \"-o\"\n\
   \  or the long form: \"--option\".\n\
    - The option {-h,--help} is a boolean input options, that is they do not\n\
   \  need any additional argument.

# Information of CheckBundle class
checkBundles.info   = \
    CheckBundle: Program that carries out some checking on the bundle classes.\n\
   \    For some testing it is mandatory that the bundle class are subclasses from \n\
   \    com.soluzionasf.ocen.util.genbundle.ContainerResourceBundle.\n\
    Copyright (c) 2003 Unión Fenosa - Soluziona - S.A. All Rights Reserved.

# Usage of CheckBundle class
checkBundles.use   = \
    usage:\n\
   \    java com.soluzionasf.ocen.util.genBundle.CheckBundles\n\
   \        [-h, --help] propertyFile\n\
    where:\n\
    {-h,--help}  Print the help (this message). If this appears as first argument,\n\
   \             then the help is printed and no other action is carried out.\n\
    propertyFile Property file that contents the used properties\n\
   \             by the class. At this file should be defined at least the following\n\
   \             properties:\n\
   \             bundle     List with the name of the base classes.\n\
   \             package    The package which belong the classes of the bundle\n\
   \                        properties.\n\
   \             locales    List with locales for which the bundle classes of the\n\
   \                        property bundle are defined. Por example:\n\
   \                        es_ES en_EN. The syntax of each element is\n\
   \                        the corresponding output of the method\n\
   \                        Locale.toString().\n\
   There are other optional properties, for more information please\n\
   consult the CheckBundle API.

copyright   = \
    ****************************************\
    ****************************************\n\
    * This class was generated automatically by\n\
    *   '{'@link com.soluzionasf.ocen.util.genbundle.GenBundle\n\
    *   GenBundle'}' generator.\n\
    * <table width="70%" border="0">\n\
    *    <tr> <td width="40%"><b>Version</b></td><td width="60%">{0}</td></tr>\n\
    *    <tr> <td width="40%"><b>Generation Date</b></td><td width="60%">{1}</td></tr>\n\
    *    <tr> <td width="40%"><b>Author</b></td><td width="60%">\n\
    *        <a href="mailto:dleal@soluziona.com"> David Leal (DLE)</a></td></tr>\n\
    * </table>\n\
    * (c) 2002 Soluziona\n\
    ****************************************\
    ****************************************
